{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Menlo-Regular;\f4\froman\fcharset0 Times-Bold;\f5\froman\fcharset0 Times-Roman;
\f6\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid603\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid702\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid801\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid803\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid20}
{\list\listtemplateid21\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid21}
{\list\listtemplateid22\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid22}
{\list\listtemplateid23\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid23}
{\list\listtemplateid24\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid2301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid24}
{\list\listtemplateid25\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid25}
{\list\listtemplateid26\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid26}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}{\listoverride\listid21\listoverridecount0\ls21}{\listoverride\listid22\listoverridecount0\ls22}{\listoverride\listid23\listoverridecount0\ls23}{\listoverride\listid24\listoverridecount0\ls24}{\listoverride\listid25\listoverridecount0\ls25}{\listoverride\listid26\listoverridecount0\ls26}}
\margl1440\margr1440\vieww41120\viewh25720\viewkind1
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Personal Finance Tracker (LedgerLite) \'97 Product Requirements Document (PRD)\
\
## 1. Product Summary\
**Product name (working):** LedgerLite  \
**Platform (v1):** .NET console app (C#)  \
**Platform (v2):** Desktop UI (WinForms or WPF) on top of same core logic\
\
**What it does:**  \
LedgerLite lets a user record financial transactions (income and expenses), categorize them, store them locally, and generate simple reports (spend by month, top categories, etc.). Data is persisted locally (JSON first, then upgrade to SQLite/LiteDB). User can export summaries to CSV.\
\
**Why it exists:**  \
The point is not \'93a budgeting app.\'94  \
The point is to learn to design, model, persist, query, and present data \'97 which is 80/20 of real software. You\'92ll also practice separation of concerns so that the same business logic can be reused in a future GUI or API.\
\
---\
\
## 2. Goals / Non-Goals\
\
### 2.1 Goals (must have for v1 console)\
1. A user can add an income or expense transaction.\
2. A user can edit or delete an existing transaction.\
3. All transactions are saved and loaded between runs.\
4. A user can run basic reports:\
   - total spent in a given month\
   - total income in a given month\
   - net balance (income - expenses)\
   - top 3 categories by spend in that month\
5. A user can export a report to CSV.\
\
### 2.2 Stretch Goals (nice to have in v1.5+ console)\
1. Basic input validation (no negative amounts for income, date must parse, etc.).\
2. Undo last action in current session.\
3. Custom categories management (add/remove categories).\
\
### 2.3 Non-Goals (explicitly out of scope for now)\
- Bank account syncing / Plaid / API integrations.\
- Multi-user accounts / auth / passwords.\
- Cloud sync.\
- Mobile app.\
- AI insights.\
\
---\
\
## 3. User Personas\
\
### Persona A: \'93The tracker\'94\
Wants to track spending manually every day/week. Needs fast entry and simple summaries.\
\
### Persona B: \'93The reviewer\'94\
Does bulk entry at end of month and just wants to know \'93Where did money go?\'94 / \'93Am I net positive?\'94\
\
For this project, **you are both personas.** You\'92ll design UX for fast add and fast reporting.\
\
---\
\
## 4. Core Use Cases / User Stories\
\
**US-01 Add transaction**  \
As a user, I can add a transaction with:\
- date\
- description\
- category\
- amount\
- type (Income or Expense)\
\
So that I can log money movement.\
\
**US-02 Edit transaction**  \
As a user, I can update an existing transaction\'92s fields if I made a mistake.\
\
**US-03 Delete transaction**  \
As a user, I can remove a transaction that shouldn\'92t be there.\
\
**US-04 View all transactions**  \
As a user, I can list all transactions sorted by date, most recent first.\
\
**US-05 Monthly report**  \
As a user, I can ask:\
- \'93Show me spending for September 2025\'94\
And get:\
- Total income that month  \
- Total expenses that month  \
- Net (income - expenses)  \
- Top 3 categories by total spend  \
\
**US-06 Export report**  \
As a user, I can export that monthly report to CSV so I can open it in Excel/Sheets.\
\
**US-07 Persistent storage**  \
As a user, when I close and reopen the app, my data is still there.\
\
---\
\
## 5. Feature Requirements\
\
### 5.1 Transaction Management\
- Add Transaction\
  - CLI flow: prompt user for each field\
- Edit Transaction\
  - User selects transaction by ID/index\
- Delete Transaction\
  - User selects transaction by ID/index\
- List Transactions\
  - Show last N (default 20) in a table-like format\
\
Validation rules:\
- `Amount` must be > 0\
- `Type` must be `Income` or `Expense`\
- `Date` must be parseable (YYYY-MM-DD)\
- `Category` must be a non-empty string\
\
### 5.2 Categories\
- Predefined category set on first run:\
  - Income: `Salary`, `Gift`, `Refund`, `Other`\
  - Expense: `Rent`, `Groceries`, `EatingOut`, `Utilities`, `Transport`, `Entertainment`, `Health`, `Other`\
\
- Stretch: allow user to add/remove categories later and persist that list separately.\
\
### 5.3 Reporting\
- Input: Year + Month (e.g. `2025-09`)\
- Output:\
  - Total income in that month\
  - Total expenses in that month\
  - Net balance\
  - Top 3 categories (by total spend amount, descending)\
  - Count of transactions in that period\
\
- Display in console as text.\
- Offer \'93Export to CSV? (y/n)\'94.\
\
### 5.4 Export\
- CSV format should include:\
  - `category, total_spent`\
  - `total_income`\
  - `total_expense`\
  - `net`\
\
- CSV file is written to:  \
  `exports/Report_YYYY_MM.csv`\
\
- If `exports/` doesn\'92t exist, create it.\
\
### 5.5 Persistence\
**Phase 1 Storage = JSON file**\
- File path: `data/transactions.json`\
- On app start: load file if exists, else start empty list\
- On data change (add/edit/delete): save file\
\
**Phase 2 Storage = SQLite or LiteDB**\
- Replace file I/O with DB context layer\
- No UI changes: the rest of the app uses repository interfaces, so storage swap is clean\
\
---\
\
## 6. High-Level Architecture\
\
We\'92re going to build like pros, even for a console app.  \
We will separate business logic from UI and storage.\
\
### 6.1 Layers\
\
#### Domain Layer (Core Logic, no IO)\
- Entities:\
  - `Transaction`\
  - `Category` (optional stretch)\
- Value Objects / Enums:\
  - `TransactionType` (Income, Expense)\
- Business rules:\
  - Calculations for reports\
- Interfaces:\
  - `ITransactionRepository`\
  - `IReportService`\
\
This layer should **not** know about JSON, files, console, or SQLite.\
\
#### Infrastructure Layer (Persistence / File / DB)\
- `JsonTransactionRepository : ITransactionRepository`\
  - Knows where `transactions.json` lives\
  - Handles serialization\
- (Later) `SqliteTransactionRepository : ITransactionRepository`\
  - Uses SQLite / EF Core\
  - Swap-in with no changes to other layers\
\
#### Application Layer (Use Cases / Services)\
- `TransactionService`\
  - Add/Edit/Delete/List logic\
  - Calls repository\
- `ReportService`\
  - Monthly summaries, top categories, CSV generation\
\
#### Presentation Layer (Console UI for v1)\
- Menu, prompts, printing tables\
- Converts user input (strings) 
\f1 \uc0\u8594 
\f0  domain models\
- Catches exceptions and prints friendly errors\
- Calls Application Layer services\
\
**Why this matters:**  \
With this layout we can:\
- replace console UI with WPF later\
- expose the same services in a Web API\
- change persistence from JSON 
\f1 \uc0\u8594 
\f0  SQLite\
with minimal rewrite.\
\
That\'92s senior-level thinking.\
\
---\
\
## 7. Data Model\
\
### 7.1 `Transaction`\
Fields:\
- `Id` (Guid)\
- `Date` (DateTime)\
- `Description` (string)\
- `Category` (string)\
- `Amount` (decimal)\
- `Type` (enum TransactionType: Income or Expense)\
\
Rules:\
- `Amount` is always positive\
- Interpretation:\
  - `Income` increases balance\
  - `Expense` decreases balance\
\
### 7.2 Example JSON record\
```json\
\{\
  "Id": "4c7a5d1a-4d0b-4e1c-a7aa-0d57f6cf5e0a",\
  "Date": "2025-09-14T00:00:00",\
  "Description": "Groceries - Publix",\
  "Category": "Groceries",\
  "Amount": 82.45,\
  "Type": "Expense"\
\}\
\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Personal Finance Tracker (LedgerLite) \'97 Product Requirements Document (PRD)\
\
## 1. Product Summary\
**Product name (working):** LedgerLite  \
**Platform (v1):** .NET console app (C#)  \
**Platform (v2):** Desktop UI (WinForms or WPF) on top of same core logic\
\
**What it does:**  \
LedgerLite lets a user record financial transactions (income and expenses), categorize them, store them locally, and generate simple reports (spend by month, top categories, etc.). Data is persisted locally (JSON first, then upgrade to SQLite/LiteDB). User can export summaries to CSV.\
\
**Why it exists:**  \
The point is not \'93a budgeting app.\'94  \
The point is to learn to design, model, persist, query, and present data \'97 which is 80/20 of real software. You\'92ll also practice separation of concerns so that the same business logic can be reused in a future GUI or API.\
\
---\
\
## 2. Goals / Non-Goals\
\
### 2.1 Goals (must have for v1 console)\
1. A user can add an income or expense transaction.\
2. A user can edit or delete an existing transaction.\
3. All transactions are saved and loaded between runs.\
4. A user can run basic reports:\
   - total spent in a given month\
   - total income in a given month\
   - net balance (income - expenses)\
   - top 3 categories by spend in that month\
5. A user can export a report to CSV.\
\
### 2.2 Stretch Goals (nice to have in v1.5+ console)\
1. Basic input validation (no negative amounts for income, date must parse, etc.).\
2. Undo last action in current session.\
3. Custom categories management (add/remove categories).\
\
### 2.3 Non-Goals (explicitly out of scope for now)\
- Bank account syncing / Plaid / API integrations.\
- Multi-user accounts / auth / passwords.\
- Cloud sync.\
- Mobile app.\
- AI insights.\
\
---\
\
## 3. User Personas\
\
### Persona A: \'93The tracker\'94\
Wants to track spending manually every day/week. Needs fast entry and simple summaries.\
\
### Persona B: \'93The reviewer\'94\
Does bulk entry at end of month and just wants to know \'93Where did money go?\'94 / \'93Am I net positive?\'94\
\
For this project, **you are both personas.** You\'92ll design UX for fast add and fast reporting.\
\
---\
\
## 4. Core Use Cases / User Stories\
\
**US-01 Add transaction**  \
As a user, I can add a transaction with:\
- date\
- description\
- category\
- amount\
- type (Income or Expense)\
\
So that I can log money movement.\
\
**US-02 Edit transaction**  \
As a user, I can update an existing transaction\'92s fields if I made a mistake.\
\
**US-03 Delete transaction**  \
As a user, I can remove a transaction that shouldn\'92t be there.\
\
**US-04 View all transactions**  \
As a user, I can list all transactions sorted by date, most recent first.\
\
**US-05 Monthly report**  \
As a user, I can ask:\
- \'93Show me spending for September 2025\'94\
And get:\
- Total income that month  \
- Total expenses that month  \
- Net (income - expenses)  \
- Top 3 categories by total spend  \
\
**US-06 Export report**  \
As a user, I can export that monthly report to CSV so I can open it in Excel/Sheets.\
\
**US-07 Persistent storage**  \
As a user, when I close and reopen the app, my data is still there.\
\
---\
\
## 5. Feature Requirements\
\
### 5.1 Transaction Management\
- Add Transaction\
  - CLI flow: prompt user for each field\
- Edit Transaction\
  - User selects transaction by ID/index\
- Delete Transaction\
  - User selects transaction by ID/index\
- List Transactions\
  - Show last N (default 20) in a table-like format\
\
Validation rules:\
- `Amount` must be > 0\
- `Type` must be `Income` or `Expense`\
- `Date` must be parseable (YYYY-MM-DD)\
- `Category` must be a non-empty string\
\
### 5.2 Categories\
- Predefined category set on first run:\
  - Income: `Salary`, `Gift`, `Refund`, `Other`\
  - Expense: `Rent`, `Groceries`, `EatingOut`, `Utilities`, `Transport`, `Entertainment`, `Health`, `Other`\
\
- Stretch: allow user to add/remove categories later and persist that list separately.\
\
### 5.3 Reporting\
- Input: Year + Month (e.g. `2025-09`)\
- Output:\
  - Total income in that month\
  - Total expenses in that month\
  - Net balance\
  - Top 3 categories (by total spend amount, descending)\
  - Count of transactions in that period\
\
- Display in console as text.\
- Offer \'93Export to CSV? (y/n)\'94.\
\
### 5.4 Export\
- CSV format should include:\
  - `category, total_spent`\
  - `total_income`\
  - `total_expense`\
  - `net`\
\
- CSV file is written to:  \
  `exports/Report_YYYY_MM.csv`\
\
- If `exports/` doesn\'92t exist, create it.\
\
### 5.5 Persistence\
**Phase 1 Storage = JSON file**\
- File path: `data/transactions.json`\
- On app start: load file if exists, else start empty list\
- On data change (add/edit/delete): save file\
\
**Phase 2 Storage = SQLite or LiteDB**\
- Replace file I/O with DB context layer\
- No UI changes: the rest of the app uses repository interfaces, so storage swap is clean\
\
---\
\
## 6. High-Level Architecture\
\
We\'92re going to build like pros, even for a console app.  \
We will separate business logic from UI and storage.\
\
### 6.1 Layers\
\
#### Domain Layer (Core Logic, no IO)\
- Entities:\
  - `Transaction`\
  - `Category` (optional stretch)\
- Value Objects / Enums:\
  - `TransactionType` (Income, Expense)\
- Business rules:\
  - Calculations for reports\
- Interfaces:\
  - `ITransactionRepository`\
  - `IReportService`\
\
This layer should **not** know about JSON, files, console, or SQLite.\
\
#### Infrastructure Layer (Persistence / File / DB)\
- `JsonTransactionRepository : ITransactionRepository`\
  - Knows where `transactions.json` lives\
  - Handles serialization\
- (Later) `SqliteTransactionRepository : ITransactionRepository`\
  - Uses SQLite / EF Core\
  - Swap-in with no changes to other layers\
\
#### Application Layer (Use Cases / Services)\
- `TransactionService`\
  - Add/Edit/Delete/List logic\
  - Calls repository\
- `ReportService`\
  - Monthly summaries, top categories, CSV generation\
\
#### Presentation Layer (Console UI for v1)\
- Menu, prompts, printing tables\
- Converts user input (strings) 
\f3 \uc0\u8594 
\f2  domain models\
- Catches exceptions and prints friendly errors\
- Calls Application Layer services\
\
**Why this matters:**  \
With this layout we can:\
- replace console UI with WPF later\
- expose the same services in a Web API\
- change persistence from JSON 
\f3 \uc0\u8594 
\f2  SQLite\
with minimal rewrite.\
\
That\'92s senior-level thinking.\
\
---\
\
## 7. Data Model\
\
### 7.1 `Transaction`\
Fields:\
- `Id` (Guid)\
- `Date` (DateTime)\
- `Description` (string)\
- `Category` (string)\
- `Amount` (decimal)\
- `Type` (enum TransactionType: Income or Expense)\
\
Rules:\
- `Amount` is always positive\
- Interpretation:\
  - `Income` increases balance\
  - `Expense` decreases balance\
\
### 7.2 Example JSON record\
```json\
\{\
  "Id": "4c7a5d1a-4d0b-4e1c-a7aa-0d57f6cf5e0a",\
  "Date": "2025-09-14T00:00:00",\
  "Description": "Groceries - Publix",\
  "Category": "Groceries",\
  "Amount": 82.45,\
  "Type": "Expense"\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 7.3 Storage layout (Phase 1)\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs26 \cf0 transactions.json
\f5\fs24 :\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 [\
  \{\
    "Id": "guid-1",\
    "Date": "2025-09-01T00:00:00",\
    "Description": "Paycheck",\
    "Category": "Salary",\
    "Amount": 3200.00,\
    "Type": "Income"\
  \},\
  \{\
    "Id": "guid-2",\
    "Date": "2025-09-02T00:00:00",\
    "Description": "Rent",\
    "Category": "Rent",\
    "Amount": 1400.00,\
    "Type": "Expense"\
  \}\
]\
\pard\pardeftab720\partightenfactor0

\f5\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 8. Console UX / Interaction Flow\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Main menu (loop)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add Transaction\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Edit Transaction\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Delete Transaction\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 List Recent Transactions\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run Monthly Report\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Export Report to CSV\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Quit\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 8.1 Add Transaction Flow\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b0\fs24 \cf0 System asks:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Type (
\f2\fs26 Income
\f5\fs24  / 
\f2\fs26 Expense
\f5\fs24 )\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Date (
\f2\fs26 YYYY-MM-DD
\f5\fs24 )\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Description\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Category (show list, allow custom)\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Amount\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Then:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Validate\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Save\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Confirm: 
\f2\fs26 Transaction added. ID: \{guid\}
\f5\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 8.2 Edit Transaction Flow\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Show last N transactions with IDs/index\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ask: \'93Which ID do you want to edit?\'94\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For each field, show current value and allow overwrite or 
\f2\fs26 [Enter]
\f5\fs24  to keep\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Validate + save\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 8.3 Delete Transaction Flow\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Show last N with IDs/index\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ask ID\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Confirm \'93Are you sure (y/n)?\'94\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Delete + save\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 8.4 List Transactions\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print table:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls6\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ID (shortened, e.g. first 8 chars)\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Date\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Type\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Category\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Amount\
\ls6\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Description\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Most recent first\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Show count\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 8.5 Monthly Report Flow\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ask: \'93Enter year (YYYY):\'94\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ask: \'93Enter month (1-12):\'94\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Output:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls7\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Total Income: $X\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Total Expense: $Y\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Net: $Z\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Top Categories:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa240\partightenfactor0
\ls7\ilvl2\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9642 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Groceries: $400\
\ls7\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9642 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rent: $1400\
\ls7\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9642 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Transport: $120\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ask: \'93Export to CSV? (y/n)\'94\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls7\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If yes, write to 
\f2\fs26 exports/Report_2025_09.csv
\f5\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 9. Error Handling & Validation Requirements\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If the JSON file is missing or corrupted:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls8\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 App should not crash.\
\ls8\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 App should warn:\uc0\u8232 
\f2\fs26 "Data file unreadable, starting with empty ledger."
\f5\fs24 \
\ls8\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Continue with an empty list in memory.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If user enters malformed date:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls8\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reprompt instead of throwing.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If user enters non-numeric amount:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls8\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reprompt.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If user tries to edit/delete an ID that doesn\'92t exist:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls8\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Show 
\f2\fs26 "No transaction found with that ID."
\f5\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 We want graceful, predictable behavior. This trains production thinking.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 10. Testing Requirements\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b0\fs24 \cf0 We will write unit tests for:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f4\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ReportService
\f5\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls9\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Given a list of transactions, can it:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa240\partightenfactor0
\ls9\ilvl2\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9642 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 calculate total expenses/income?\
\ls9\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9642 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 filter by month/year?\
\ls9\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9642 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 compute top spending categories correctly?\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f4\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TransactionService
\f5\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls9\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AddTransaction
\f5\fs24  rejects invalid data (negative amount, invalid type, etc.)\
\ls9\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 EditTransaction
\f5\fs24  actually persists updated values\
\ls9\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DeleteTransaction
\f5\fs24  actually removes the correct ID\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f4\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Serialization round-trip
\f5\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls9\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Save to JSON then load should preserve data faithfully\
\ls9\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Decimal precision should not get mangled\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 We do 
\f4\b not
\f5\b0  test console prompts in unit tests (I/O).\uc0\u8232 We test logic and behavior.\
\pard\pardeftab720\sa240\partightenfactor0

\f4\b \cf0 Framework:
\f5\b0  xUnit\uc0\u8232 
\f4\b Mocks/Fakes:
\f5\b0  in-memory implementation of 
\f2\fs26 ITransactionRepository
\f5\fs24  for tests\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 11. Technical Stack / Libraries\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Runtime\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .NET 8 (LTS path, modern C# features)\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Language\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C#\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Persistence (Phase 1)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0
\f2\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 System.Text.Json
\f5\fs24  for serialization\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Local file storage\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Reporting\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LINQ for aggregation\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 System.IO
\f5\fs24  for CSV export\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Testing\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls14\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 xUnit\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (Optional) FluentAssertions for nicer assertions\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Hand-rolled fakes for repos\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Phase 2+ (not day one but planned)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls15\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SQLite or LiteDB persistence instead of flat file\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 EF Core (if SQLite route)\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 WPF/WinForms desktop client consuming the same 
\f2\fs26 TransactionService
\f5\fs24  and 
\f2\fs26 ReportService
\f5\fs24 \
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 12. Milestones\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Milestone 0 \'97 Repo Skeleton\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create solution:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls16\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LedgerLite.Domain
\f5\fs24  (entities/interfaces)\
\ls16\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LedgerLite.Infrastructure
\f5\fs24  (Json repository)\
\ls16\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LedgerLite.Application
\f5\fs24  (services)\
\ls16\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LedgerLite.CLI
\f5\fs24  (console UI)\
\ls16\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LedgerLite.Tests
\f5\fs24  (xUnit tests)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add project references\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Milestone 1 \'97 Transactions CRUD (Console)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls17\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement 
\f2\fs26 Transaction
\f5\fs24  entity and 
\f2\fs26 TransactionService
\f5\fs24 \
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement 
\f2\fs26 JsonTransactionRepository
\f5\fs24 \
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Console can Add/List/Delete transactions\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Data persists to file\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Milestone 2 \'97 Reporting\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls18\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement 
\f2\fs26 ReportService
\f5\fs24 \
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Monthly summary works and is printed in console\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CSV export works\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Milestone 3 \'97 Edit + Validation\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls19\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement edit transaction\
\ls19\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add validation (date, amount, etc.)\
\ls19\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Improve console UX flow and error handling\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Milestone 4 \'97 Tests\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls20\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add xUnit tests for 
\f2\fs26 ReportService
\f5\fs24  and 
\f2\fs26 TransactionService
\f5\fs24 \
\ls20\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add in-memory fake repo for tests\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 Milestone 5 \'97 GUI Ready (Architecture, not UI yet)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls21\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Confirm that none of the business logic depends on console\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Confirm services are cleanly injectable\
\ls21\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Prepare for 
\f2\fs26 LedgerLite.Desktop
\f5\fs24  (WPF/WinForms) that calls the same Application layer services\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 13. Definition of Done for v1 (Console)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls22\ilvl0
\f5\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I can run the console app and:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls22\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 add income/expense\
\ls22\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 list my last 20 transactions\
\ls22\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 fix a typo in one\
\ls22\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 delete one\
\ls22\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 generate a September 2025 report\
\ls22\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 export that report to a CSV file\
\ls22\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 quit\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls22\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I can relaunch the app and the data is still there.\
\ls22\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I can run tests and they pass.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 At that point, the project demonstrates:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls23\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 object modeling\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 persistence abstraction\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LINQ data analysis\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 clean business logic\
\ls23\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 testability\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 14. Roadmap / Future Work\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls24\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SQLite swap
\f5\b0 \uc0\u8232 Swap JSON to SQLite via EF Core.\u8232 No change to the console UI.\u8232 Demonstrates persistence-layer abstraction.\
\ls24\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Desktop UI (WPF or WinForms)
\f5\b0 \uc0\u8232 Build a CRUD grid view + \'93Run Report\'94 button UI.\u8232 Reuse the same Application layer.\u8232 Demonstrates MVVM-ish separation and desktop app skills.\
\ls24\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Import bank CSV
\f5\b0 \uc0\u8232 Add a CLI option to bulk-import from a bank CSV export.\u8232 Demonstrates mapping dirty external data into a clean internal model.\
\ls24\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Tag anomalies for audit
\f5\b0 \uc0\u8232 Allow user to flag suspicious expenses.\u8232 Later, an AI layer can generate insights from those flags.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 15. Immediate Next Step\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b0\fs24 \cf0 We begin with Milestone 0 & Milestone 1:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls25\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create the solution + projects.\
\ls25\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Define:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls25\ilvl1
\f2\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Transaction
\f5\fs24 \
\ls25\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TransactionType
\f5\fs24 \
\ls25\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ITransactionRepository
\f5\fs24 \
\ls25\ilvl1
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f3 \uc0\u9702 
\f2 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TransactionService
\f5\fs24 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls25\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f6 \uc0\u9702 
\f5 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 basic 
\f2\fs26 Program.cs
\f5\fs24  menu loop\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls25\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implement 
\f2\fs26 JsonTransactionRepository
\f5\fs24 .\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 After that, the app will already be able to:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls26\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a transaction\
\ls26\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Save to disk\
\ls26\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 List transactions\
\ls26\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Delete transactions\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 From there we move to reporting.\
This is where you stop being \'93learning C# syntax\'94 and start being \'93I ship software.\'94\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 \
}