{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;\f2\fnil\fcharset128 HiraginoSans-W3;
\f3\fmodern\fcharset0 Courier;\f4\fnil\fcharset0 Menlo-Regular;\f5\froman\fcharset0 Times-Bold;
\f6\froman\fcharset0 Times-Roman;\f7\froman\fcharset0 TimesNewRomanPSMT;\f8\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid501\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid702\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1801\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid20}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}}
\margl1440\margr1440\vieww41120\viewh25160\viewkind1
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # LedgerLite\
\
LedgerLite is a local-first personal finance tracker written in C#/.NET.\
\
You enter income and expenses, categorize them, and generate monthly reports (spend by category, total in/out, net). Data is stored on disk (JSON in v1, upgradable to SQLite/LiteDB), and you can export summaries to CSV.\
\
This project is intentionally built like real production software:\
- Clean separation between domain logic, persistence, and UI.\
- Testable services.\
- Storage abstraction so we can swap JSON 
\f1 \uc0\u8594 
\f0  SQLite with minimal changes.\
- Console UI first, then WPF/WinForms desktop on top of the same core.\
\
This is not a toy exercise. This is training you to be employable in C#/.NET.\
\
\
## 1. Project Goals\
\
### Core goals\
- Add/edit/delete transactions\
- Persist transactions locally\
- Generate monthly spending/income reports\
- Export report to CSV\
- Be cleanly unit testable\
\
### Stretch\
- Custom categories\
- Undo last action\
- Desktop GUI (WPF/WinForms)\
- Swap persistence to SQLite/EF Core\
\
### Explicit non-goals (for v1)\
- Bank syncing / Plaid\
- Multi-user auth\
- Cloud sync\
- AI insights\
- Mobile app\
\
\
## 2. Features\
\
### Transactions\
- Add an income or expense\
- Edit fields on an existing transaction\
- Delete a transaction\
- View recent transactions in a table\
\
Each transaction includes:\
- `Id` (Guid)\
- `Date` (DateTime)\
- `Description` (string)\
- `Category` (string)\
- `Amount` (decimal, always positive)\
- `Type` (`Income` or `Expense`)\
\
### Reporting\
- Ask \'93What did I spend in Month X / Year Y?\'94\
- Get:\
  - Total income\
  - Total expenses\
  - Net (income - expenses)\
  - Top 3 categories by spend\
  - Count of transactions\
- Optionally export to CSV\
\
### Persistence\
- v1: JSON file at `data/transactions.json`\
- v2: SQLite or LiteDB\
- The rest of the code talks to storage through an interface, so we can swap the backend without breaking UI/business logic\
\
### Export\
- Writes CSV to `exports/Report_YYYY_MM.csv`\
- CSV includes per-category totals and summary numbers\
\
\
## 3. Tech Stack\
\
### Runtime\
- .NET 8\
- C#\
\
### Storage\
- `System.Text.Json` for serialization\
- Local file system for persistence\
\
### Application / Business Logic\
- Domain models + services for:\
  - Transaction CRUD\
  - Reporting (LINQ aggregation, filtering by month)\
  - CSV generation\
\
### UI\
- Initial UI: Console app (menu-driven)\
- Future UI: WPF/WinForms desktop client that reuses the same services\
\
### Testing\
- xUnit for unit tests\
- Fake in-memory repositories to test logic without touching disk\
\
\
## 4. Solution Structure\
\
We\'92re using a multi-project solution even for a \'93simple console app.\'94  \
Reason: This is how you learn real architecture.\
\
```text\
LedgerLite.sln\

\f2 \'84\'a5
\f0 \uc0\u9472  LedgerLite.Domain/          // Pure domain models & interfaces\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  Transaction.cs\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  TransactionType.cs\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  ITransactionRepository.cs\
\uc0\u9474   \u9492 \u9472  IReportService.cs\
\uc0\u9474 \

\f2 \'84\'a5
\f0 \uc0\u9472  LedgerLite.Application/     // Use case services (logic)\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  TransactionService.cs\
\uc0\u9474   \u9492 \u9472  ReportService.cs\
\uc0\u9474 \

\f2 \'84\'a5
\f0 \uc0\u9472  LedgerLite.Infrastructure/  // Persistence / IO / external concerns\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  JsonTransactionRepository.cs\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  FileStorageConfig.cs\
\uc0\u9474   \u9492 \u9472  CsvExporter.cs\
\uc0\u9474 \

\f2 \'84\'a5
\f0 \uc0\u9472  LedgerLite.CLI/             // Console frontend (presentation layer)\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  Program.cs\
\uc0\u9474   
\f2 \'84\'a5
\f0 \uc0\u9472  Menu.cs\
\uc0\u9474   \u9492 \u9472  InputParser.cs\
\uc0\u9474 \
\uc0\u9492 \u9472  LedgerLite.Tests/           // Automated tests\
   
\f2 \'84\'a5
\f0 \uc0\u9472  TransactionServiceTests.cs\
   
\f2 \'84\'a5
\f0 \uc0\u9472  ReportServiceTests.cs\
   \uc0\u9492 \u9472  JsonTransactionRepositoryTests.cs\
\
\
\
\pard\pardeftab720\partightenfactor0

\f3\fs26 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # LedgerLite\
\
LedgerLite is a local-first personal finance tracker written in C#/.NET.\
\
You enter income and expenses, categorize them, and generate monthly reports (spend by category, total in/out, net). Data is stored on disk (JSON in v1, upgradable to SQLite/LiteDB), and you can export summaries to CSV.\
\
This project is intentionally built like real production software:\
- Clean separation between domain logic, persistence, and UI.\
- Testable services.\
- Storage abstraction so we can swap JSON 
\f4 \uc0\u8594 
\f3  SQLite with minimal changes.\
- Console UI first, then WPF/WinForms desktop on top of the same core.\
\
This is not a toy exercise. This is training you to be employable in C#/.NET.\
\
\
## 1. Project Goals\
\
### Core goals\
- Add/edit/delete transactions\
- Persist transactions locally\
- Generate monthly spending/income reports\
- Export report to CSV\
- Be cleanly unit testable\
\
### Stretch\
- Custom categories\
- Undo last action\
- Desktop GUI (WPF/WinForms)\
- Swap persistence to SQLite/EF Core\
\
### Explicit non-goals (for v1)\
- Bank syncing / Plaid\
- Multi-user auth\
- Cloud sync\
- AI insights\
- Mobile app\
\
\
## 2. Features\
\
### Transactions\
- Add an income or expense\
- Edit fields on an existing transaction\
- Delete a transaction\
- View recent transactions in a table\
\
Each transaction includes:\
- `Id` (Guid)\
- `Date` (DateTime)\
- `Description` (string)\
- `Category` (string)\
- `Amount` (decimal, always positive)\
- `Type` (`Income` or `Expense`)\
\
### Reporting\
- Ask \'93What did I spend in Month X / Year Y?\'94\
- Get:\
  - Total income\
  - Total expenses\
  - Net (income - expenses)\
  - Top 3 categories by spend\
  - Count of transactions\
- Optionally export to CSV\
\
### Persistence\
- v1: JSON file at `data/transactions.json`\
- v2: SQLite or LiteDB\
- The rest of the code talks to storage through an interface, so we can swap the backend without breaking UI/business logic\
\
### Export\
- Writes CSV to `exports/Report_YYYY_MM.csv`\
- CSV includes per-category totals and summary numbers\
\
\
## 3. Tech Stack\
\
### Runtime\
- .NET 8\
- C#\
\
### Storage\
- `System.Text.Json` for serialization\
- Local file system for persistence\
\
### Application / Business Logic\
- Domain models + services for:\
  - Transaction CRUD\
  - Reporting (LINQ aggregation, filtering by month)\
  - CSV generation\
\
### UI\
- Initial UI: Console app (menu-driven)\
- Future UI: WPF/WinForms desktop client that reuses the same services\
\
### Testing\
- xUnit for unit tests\
- Fake in-memory repositories to test logic without touching disk\
\
\
## 4. Solution Structure\
\
We\'92re using a multi-project solution even for a \'93simple console app.\'94  \
Reason: This is how you learn real architecture.\
\
```text\
LedgerLite.sln\

\f4 \uc0\u9500 \u9472 
\f3  LedgerLite.Domain/          // Pure domain models & interfaces\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  Transaction.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  TransactionType.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  ITransactionRepository.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9492 \u9472 
\f3  IReportService.cs\

\f4 \uc0\u9474 
\f3 \

\f4 \uc0\u9500 \u9472 
\f3  LedgerLite.Application/     // Use case services (logic)\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  TransactionService.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9492 \u9472 
\f3  ReportService.cs\

\f4 \uc0\u9474 
\f3 \

\f4 \uc0\u9500 \u9472 
\f3  LedgerLite.Infrastructure/  // Persistence / IO / external concerns\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  JsonTransactionRepository.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  FileStorageConfig.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9492 \u9472 
\f3  CsvExporter.cs\

\f4 \uc0\u9474 
\f3 \

\f4 \uc0\u9500 \u9472 
\f3  LedgerLite.CLI/             // Console frontend (presentation layer)\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  Program.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9500 \u9472 
\f3  Menu.cs\

\f4 \uc0\u9474 
\f3   
\f4 \uc0\u9492 \u9472 
\f3  InputParser.cs\

\f4 \uc0\u9474 
\f3 \

\f4 \uc0\u9492 \u9472 
\f3  LedgerLite.Tests/           // Automated tests\
   
\f4 \uc0\u9500 \u9472 
\f3  TransactionServiceTests.cs\
   
\f4 \uc0\u9500 \u9472 
\f3  ReportServiceTests.cs\
   
\f4 \uc0\u9492 \u9472 
\f3  JsonTransactionRepositoryTests.cs\
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 Responsibilities by layer\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 LedgerLite.Domain
\f6\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Knows what a Transaction is\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Knows what a ReportResult is\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declares the 
\f3\fs26 ITransactionRepository
\f6\fs24  contract\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Has no idea where data comes from\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b \cf0 \strokec2 LedgerLite.Application
\f6\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Coordinates behavior\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Applies validation / rules\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Asks repositories to save/load\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Produces report summaries\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b \cf0 \strokec2 LedgerLite.Infrastructure
\f6\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Knows how to actually write/read JSON to disk\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Knows how to write CSV exports\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Will later know how to talk to SQLite\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b \cf0 \strokec2 LedgerLite.CLI
\f6\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Collects user input\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Displays tables / summaries\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Calls services in Application layer\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Handles \'93bad input, try again\'94 instead of crashing\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b \cf0 \strokec2 LedgerLite.Tests
\f6\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Proves the logic is correct and stays correct\
\pard\pardeftab720\sa298\partightenfactor0

\f5\b\fs36 \cf0 \strokec2 5. How to Run (v1 Console App)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Install .NET 8 SDK.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Clone the repo.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Restore + build:\uc0\u8232 
\f3\fs26 dotnet restore\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 dotnet build\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\f6\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run the console app:\uc0\u8232 
\f3\fs26 dotnet run --project LedgerLite.CLI\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\f6\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You should see a menu similar to:\uc0\u8232 
\f3\fs26 1. Add Transaction\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 2. Edit Transaction\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 3. Delete Transaction\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	11	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 4. List Recent Transactions\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	12	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 5. Run Monthly Report\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	13	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 6. Export Monthly Report to CSV\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	14	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 7. Quit\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\f6\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	15	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	16	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Enter a number to perform an action.\
\pard\pardeftab720\sa298\partightenfactor0

\f5\b\fs36 \cf0 \strokec2 6. Data Storage\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Default path\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Transactions are persisted to:\uc0\u8232 
\f3\fs26 data/transactions.json
\f6\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 \strokec2 Behavior\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 On startup:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls8\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If the file exists and is valid, load it.\
\ls8\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If it doesn\'92t exist, start empty.\
\ls8\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If it\'92s corrupted, app should warn and start with an empty in-memory list (no crash).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 On every add/edit/delete:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls8\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The repository writes the entire updated list back to disk.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 This keeps persistence logic contained to the Infrastructure layer.\
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 Example 
\f8\fs30\fsmilli15210 \strokec2 transactions.json
\f5\fs28 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 [\
  \{\
    "Id": "4c7a5d1a-4d0b-4e1c-a7aa-0d57f6cf5e0a",\
    "Date": "2025-09-14T00:00:00",\
    "Description": "Groceries - Publix",\
    "Category": "Groceries",\
    "Amount": 82.45,\
    "Type": "Expense"\
  \},\
  \{\
    "Id": "e204f6dc-1bd5-49e8-a0a0-748e4d2043cf",\
    "Date": "2025-09-15T00:00:00",\
    "Description": "Paycheck September",\
    "Category": "Salary",\
    "Amount": 3200.00,\
    "Type": "Income"\
  \}\
]\
\pard\pardeftab720\sa298\partightenfactor0

\f5\b\fs36 \cf0 7. Monthly Report Output\
\pard\pardeftab720\sa240\partightenfactor0

\f6\b0\fs24 \cf0 When you run a monthly report, you\'92ll be asked:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Year (YYYY)\
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Month (1-12)\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 The console then prints:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Total Income\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Total Expenses\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Net (Income - Expenses)\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Top 3 Spending Categories:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls10\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Category name\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Total spent in that category during that month\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Number of transactions in that month\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 You\'92ll then be prompted:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f3\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Export to CSV? (y/n)
\f6\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 If \'93y\'94, a file like this will be created:\uc0\u8232 
\f3\fs26 exports/Report_2025_09.csv
\f6\fs24 \
The CSV will contain category totals and summary metrics so you can open it in Excel or Google Sheets.\
\pard\pardeftab720\sa298\partightenfactor0

\f5\b\fs36 \cf0 8. Testing\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Run tests:\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 dotnet test\
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 What we test:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Report math (totals, net, top categories)\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Filtering by month/year\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CRUD logic (add/edit/delete) in 
\f3\fs26 TransactionService
\f6\fs24 \
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 JSON round-trip serialization (no precision loss in decimal, dates load correctly)\
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 \strokec2 What we don\'92t test:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Console input/output formatting\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Manual interaction / prompts\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Why: unit tests should test logic, not your typing skills.\
\pard\pardeftab720\sa298\partightenfactor0

\f5\b\fs36 \cf0 9. Roadmap\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Phase 1: Console App (MVP)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls14\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CLI menu for CRUD\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 JSON-backed persistence\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Monthly reporting\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CSV export\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Basic unit tests\
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 \strokec2 Phase 2: Storage Upgrade\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls15\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f3\fs26 SqliteTransactionRepository
\f6\fs24  using SQLite or LiteDB\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Keep the same 
\f3\fs26 ITransactionRepository
\f6\fs24  interface\
\ls15\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Switch implementations via config\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 This proves you understand persistence abstraction.\
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 Phase 3: Desktop UI\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f3\fs26 LedgerLite.Desktop
\f6\fs24  using WPF or WinForms\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reuse 
\f3\fs26 TransactionService
\f6\fs24  and 
\f3\fs26 ReportService
\f6\fs24  for logic\
\ls16\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UI becomes:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls16\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 transaction grid\
\ls16\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'93Run Report\'94 button\
\ls16\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'93Export CSV\'94 button\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls16\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You are now showing MVVM/MVP separation\
\pard\pardeftab720\sa280\partightenfactor0

\f5\b\fs28 \cf0 \strokec2 Phase 4: Importer\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls17\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add \'93Import CSV from bank\'94 command\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Map / clean external CSV columns into internal 
\f3\fs26 Transaction
\f6\fs24  objects\
\ls17\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bulk insert\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 This demonstrates basic ETL/data engineering skills.\
\pard\pardeftab720\sa298\partightenfactor0

\f5\b\fs36 \cf0 10. Why This Project Matters (Career Positioning)\
\pard\pardeftab720\sa240\partightenfactor0

\f6\b0\fs24 \cf0 By the time Phase 2 or 3 is done, you can honestly say in an interview:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls18\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You\'92ve designed and implemented a layered .NET application.\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You\'92ve handled persistence, serialization, and data integrity.\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You\'92ve produced analytical reports using LINQ and domain logic instead of hardcoding.\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You\'92ve written and run unit tests against business logic.\
\ls18\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You\'92ve cleanly separated UI from logic and logic from storage.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 That jumps you out of \'93beginner\'94 and into \'93I can ship production-grade internal tools,\'94 which is what most C#/.NET jobs actually are.\
\pard\pardeftab720\sa298\partightenfactor0

\f5\b\fs36 \cf0 11. Status / Next Step\
\pard\pardeftab720\sa240\partightenfactor0

\f6\b0\fs24 \cf0 Immediate next action is to scaffold the solution and core classes:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls19\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create the .sln and projects (
\f3\fs26 Domain
\f6\fs24 , 
\f3\fs26 Application
\f6\fs24 , 
\f3\fs26 Infrastructure
\f6\fs24 , 
\f3\fs26 CLI
\f6\fs24 , 
\f3\fs26 Tests
\f6\fs24 )\
\ls19\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add these initial types:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls19\ilvl1
\f3\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Transaction
\f6\fs24 \
\ls19\ilvl1
\f3\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TransactionType
\f6\fs24 \
\ls19\ilvl1
\f3\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ITransactionRepository
\f6\fs24 \
\ls19\ilvl1
\f3\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TransactionService
\f6\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls19\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Build the first console menu in 
\f3\fs26 Program.cs
\f6\fs24  that can:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls19\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a transaction\
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 List recent transactions\
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f7 \uc0\u9702 
\f6 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Save/load from 
\f3\fs26 transactions.json
\f6\fs24 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 After that baseline runs end-to-end, we add:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls20\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 delete/edit\
\ls20\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 monthly report\
\ls20\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CSV export\
\ls20\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 tests\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 You get something working quickly, and then you tighten it like an engineer, not like a tutorial.\
\pard\pardeftab720\partightenfactor0

\f3\fs26 \cf0 \
}